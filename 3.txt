public async Task<int> PostReturnIntAsync<TResult>(string uri, TResult data, string token)
{
HttpClient httpClient = new HttpClient();
httpClient.DefaultRequestHeaders.Authorization
= new AuthenticationHeaderValue("Bearer", token);
var content = new StringContent(JsonConvert.SerializeObject(data));
content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
HttpResponseMessage response = await httpClient.PostAsync(uri, content);
string serialized = await response.Content.ReadAsStringAsync();
if (response.StatusCode == System.Net.HttpStatusCode.OK)
return int.Parse(serialized);
else
throw new Exception(serialized);
}

public async Task<TResult> PostAsync<TResult>(string uri, TResult data, string token)
{
HttpClient httpClient = new HttpClient();
httpClient.DefaultRequestHeaders.Authorization
= new AuthenticationHeaderValue("Bearer", token);
var content = new StringContent(JsonConvert.SerializeObject(data));
content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
HttpResponseMessage response = await httpClient.PostAsync(uri, content);
string serialized = await response.Content.ReadAsStringAsync();
TResult result = data;
if (response.StatusCode == System.Net.HttpStatusCode.OK)
result = await Task.Run(() => JsonConvert.DeserializeObject<TResult>(serialized));
else
throw new Exception(serialized);
return result;
}