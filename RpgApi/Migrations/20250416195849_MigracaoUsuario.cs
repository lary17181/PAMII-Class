using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoUsuario : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 53, 19, 159, 141, 40, 93, 251, 63, 15, 224, 82, 252, 186, 142, 64, 35, 102, 146, 213, 211, 81, 55, 99, 189, 49, 11, 236, 142, 237, 123, 114, 106, 7, 169, 176, 153, 1, 117, 87, 5, 88, 150, 41, 202, 163, 110, 108, 46, 63, 8, 225, 238, 98, 135, 188, 11, 55, 250, 40, 121, 247, 103, 142, 19 }, new byte[] { 26, 118, 236, 117, 167, 231, 205, 50, 37, 167, 52, 83, 2, 244, 124, 133, 103, 146, 75, 76, 101, 232, 13, 116, 207, 12, 55, 201, 250, 79, 36, 206, 99, 116, 48, 103, 251, 144, 123, 192, 95, 219, 64, 233, 184, 77, 68, 226, 59, 30, 160, 12, 56, 249, 29, 205, 78, 124, 106, 119, 186, 153, 224, 13, 241, 135, 25, 190, 100, 35, 237, 140, 96, 51, 229, 38, 248, 77, 151, 209, 65, 125, 254, 233, 159, 123, 115, 92, 114, 17, 68, 152, 123, 238, 50, 82, 19, 172, 19, 6, 47, 97, 1, 143, 209, 251, 94, 157, 253, 183, 55, 134, 182, 223, 207, 213, 165, 185, 37, 31, 144, 135, 170, 161, 103, 167, 65, 172 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 142, 43, 152, 135, 78, 107, 64, 7, 143, 236, 140, 236, 227, 55, 122, 80, 45, 96, 47, 3, 74, 49, 210, 73, 215, 212, 1, 1, 46, 152, 52, 95, 27, 65, 70, 234, 170, 32, 240, 219, 74, 10, 34, 252, 62, 78, 140, 68, 4, 124, 80, 116, 140, 111, 52, 114, 148, 220, 234, 45, 91, 157, 196, 150 }, new byte[] { 115, 224, 1, 147, 228, 197, 20, 85, 111, 143, 136, 3, 109, 101, 196, 207, 9, 69, 71, 207, 32, 111, 27, 216, 56, 11, 101, 78, 46, 15, 96, 239, 249, 172, 90, 46, 109, 217, 196, 150, 134, 183, 43, 66, 72, 22, 186, 134, 67, 63, 67, 129, 57, 239, 105, 43, 8, 237, 54, 105, 38, 252, 88, 229, 30, 241, 241, 49, 133, 163, 48, 61, 78, 36, 41, 210, 15, 100, 112, 135, 157, 252, 135, 163, 181, 155, 115, 4, 82, 121, 137, 78, 241, 136, 158, 4, 151, 242, 110, 162, 48, 222, 227, 147, 77, 109, 171, 247, 196, 79, 107, 21, 24, 185, 72, 136, 132, 0, 52, 205, 208, 18, 108, 152, 34, 250, 34, 226 } });
        }
    }
}
