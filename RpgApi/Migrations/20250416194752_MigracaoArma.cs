using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoArma : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 172, 237, 67, 176, 103, 142, 144, 194, 159, 62, 142, 216, 222, 95, 101, 201, 160, 184, 71, 60, 64, 37, 116, 13, 199, 45, 215, 104, 23, 144, 15, 46, 155, 117, 244, 12, 119, 80, 205, 109, 77, 126, 251, 253, 49, 141, 177, 168, 104, 163, 91, 34, 200, 42, 70, 65, 36, 208, 189, 128, 154, 140, 167, 178 }, new byte[] { 56, 212, 232, 148, 230, 24, 42, 212, 151, 178, 247, 176, 165, 146, 124, 245, 89, 37, 156, 81, 86, 207, 99, 199, 126, 196, 103, 75, 160, 161, 77, 4, 245, 217, 238, 130, 50, 130, 102, 126, 224, 20, 96, 241, 171, 164, 4, 53, 160, 2, 213, 39, 191, 92, 23, 129, 185, 211, 232, 108, 8, 98, 188, 59, 15, 197, 10, 215, 89, 21, 246, 192, 182, 237, 23, 242, 51, 213, 43, 164, 249, 93, 188, 186, 10, 41, 253, 63, 230, 77, 176, 169, 100, 243, 9, 190, 231, 58, 185, 139, 243, 202, 174, 15, 95, 122, 108, 65, 213, 102, 130, 188, 87, 164, 201, 212, 17, 155, 221, 237, 175, 118, 238, 78, 79, 184, 186, 219 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 16, 254, 31, 14, 9, 251, 16, 123, 150, 31, 207, 138, 227, 37, 164, 142, 144, 96, 17, 103, 102, 21, 78, 234, 54, 49, 156, 237, 135, 175, 152, 76, 167, 236, 190, 170, 55, 176, 13, 68, 193, 176, 254, 8, 223, 116, 155, 48, 22, 77, 91, 199, 43, 57, 208, 34, 49, 222, 17, 47, 23, 249, 184, 91 }, new byte[] { 51, 106, 102, 39, 121, 238, 2, 150, 88, 124, 253, 3, 106, 238, 88, 25, 119, 21, 31, 26, 75, 121, 204, 179, 242, 156, 84, 217, 228, 141, 8, 48, 94, 169, 69, 93, 122, 76, 205, 126, 79, 81, 102, 141, 136, 178, 103, 195, 20, 100, 143, 212, 136, 75, 10, 44, 23, 175, 14, 7, 191, 56, 114, 29, 110, 79, 137, 237, 25, 108, 178, 86, 173, 90, 220, 31, 188, 174, 83, 72, 94, 109, 101, 34, 72, 3, 204, 191, 115, 55, 168, 244, 28, 186, 182, 206, 165, 193, 50, 219, 212, 0, 207, 44, 89, 118, 148, 156, 252, 234, 196, 112, 194, 19, 191, 71, 174, 253, 64, 155, 88, 52, 156, 19, 8, 192, 199, 74 } });
        }
    }
}
