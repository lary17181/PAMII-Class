using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoMuitosParaMuitos : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 34, 7, 89, 100, 88, 203, 80, 101, 255, 9, 210, 129, 234, 148, 88, 145, 223, 235, 207, 202, 191, 202, 217, 73, 99, 140, 112, 127, 163, 83, 71, 139, 70, 214, 79, 41, 178, 136, 71, 102, 61, 224, 135, 105, 83, 189, 208, 41, 174, 149, 116, 104, 241, 31, 50, 49, 255, 152, 247, 94, 69, 67, 201, 66 }, new byte[] { 55, 59, 249, 81, 99, 105, 96, 82, 15, 54, 7, 251, 72, 33, 233, 123, 236, 254, 197, 235, 3, 138, 122, 178, 30, 254, 33, 141, 76, 29, 3, 105, 224, 111, 49, 212, 181, 116, 14, 226, 164, 186, 78, 8, 113, 48, 27, 212, 200, 246, 60, 125, 43, 81, 84, 76, 160, 185, 154, 75, 161, 114, 228, 66, 150, 101, 236, 225, 192, 101, 134, 17, 75, 222, 181, 139, 57, 146, 200, 131, 26, 158, 150, 69, 162, 193, 3, 184, 73, 171, 87, 228, 222, 89, 244, 222, 6, 130, 195, 252, 143, 81, 21, 129, 254, 195, 165, 20, 114, 203, 219, 171, 79, 93, 57, 148, 159, 238, 36, 125, 5, 223, 185, 134, 105, 92, 233, 166 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 150, 13, 98, 79, 139, 206, 228, 92, 192, 187, 136, 239, 31, 242, 230, 14, 148, 185, 63, 145, 132, 195, 248, 192, 251, 158, 37, 20, 25, 171, 215, 29, 132, 150, 224, 91, 163, 205, 106, 242, 135, 173, 7, 60, 164, 160, 207, 255, 36, 169, 162, 180, 183, 34, 134, 70, 149, 34, 175, 143, 186, 236, 150, 225 }, new byte[] { 138, 168, 242, 2, 35, 244, 50, 147, 125, 129, 125, 96, 170, 213, 89, 210, 147, 206, 243, 34, 255, 38, 253, 140, 229, 69, 139, 137, 141, 48, 109, 250, 163, 1, 125, 209, 40, 196, 48, 40, 18, 189, 46, 50, 72, 28, 159, 235, 28, 223, 254, 214, 191, 78, 18, 63, 190, 112, 173, 191, 166, 222, 35, 142, 137, 203, 103, 116, 14, 13, 98, 23, 196, 207, 194, 220, 56, 111, 76, 199, 3, 116, 99, 34, 233, 14, 99, 250, 184, 165, 242, 180, 181, 245, 191, 209, 72, 205, 114, 171, 142, 97, 162, 245, 243, 34, 42, 204, 197, 168, 44, 10, 17, 59, 80, 58, 73, 224, 158, 112, 30, 220, 218, 36, 168, 48, 178, 87 } });
        }
    }
}
