using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoUmParaUm : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 150, 13, 98, 79, 139, 206, 228, 92, 192, 187, 136, 239, 31, 242, 230, 14, 148, 185, 63, 145, 132, 195, 248, 192, 251, 158, 37, 20, 25, 171, 215, 29, 132, 150, 224, 91, 163, 205, 106, 242, 135, 173, 7, 60, 164, 160, 207, 255, 36, 169, 162, 180, 183, 34, 134, 70, 149, 34, 175, 143, 186, 236, 150, 225 }, new byte[] { 138, 168, 242, 2, 35, 244, 50, 147, 125, 129, 125, 96, 170, 213, 89, 210, 147, 206, 243, 34, 255, 38, 253, 140, 229, 69, 139, 137, 141, 48, 109, 250, 163, 1, 125, 209, 40, 196, 48, 40, 18, 189, 46, 50, 72, 28, 159, 235, 28, 223, 254, 214, 191, 78, 18, 63, 190, 112, 173, 191, 166, 222, 35, 142, 137, 203, 103, 116, 14, 13, 98, 23, 196, 207, 194, 220, 56, 111, 76, 199, 3, 116, 99, 34, 233, 14, 99, 250, 184, 165, 242, 180, 181, 245, 191, 209, 72, 205, 114, 171, 142, 97, 162, 245, 243, 34, 42, 204, 197, 168, 44, 10, 17, 59, 80, 58, 73, 224, 158, 112, 30, 220, 218, 36, 168, 48, 178, 87 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 206, 16, 0, 75, 29, 13, 11, 114, 201, 239, 29, 85, 19, 146, 209, 77, 166, 199, 56, 119, 92, 17, 234, 194, 110, 114, 151, 219, 190, 15, 124, 243, 210, 168, 124, 170, 115, 129, 182, 3, 58, 203, 120, 39, 106, 89, 249, 57, 177, 114, 38, 36, 21, 200, 1, 237, 149, 240, 177, 41, 112, 94, 193, 140 }, new byte[] { 36, 162, 221, 132, 133, 173, 252, 17, 169, 95, 175, 2, 119, 48, 193, 93, 152, 127, 90, 164, 62, 232, 55, 4, 243, 168, 21, 222, 164, 25, 113, 189, 147, 127, 169, 2, 35, 131, 139, 14, 11, 193, 89, 28, 121, 27, 221, 91, 17, 211, 238, 17, 67, 193, 215, 23, 253, 155, 107, 141, 38, 187, 217, 117, 126, 212, 165, 76, 37, 24, 47, 2, 23, 203, 145, 149, 121, 243, 246, 35, 36, 205, 217, 206, 52, 129, 17, 14, 27, 124, 63, 197, 146, 197, 75, 253, 94, 17, 80, 112, 173, 122, 54, 173, 149, 12, 227, 155, 154, 87, 0, 253, 62, 0, 39, 161, 178, 159, 92, 134, 36, 58, 13, 14, 164, 219, 238, 73 } });
        }
    }
}
